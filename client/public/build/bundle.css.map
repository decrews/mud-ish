{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "ChatBox.svelte",
    "Login.svelte",
    "UserList.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import io from 'socket.io-client';\n  import Events from './Events';\n  import UserList from './Components/UserList.svelte';\n  import ChatBox from './Components/ChatBox.svelte';\n  import Login from './Components/Login.svelte';\n\n  let socket;\n  let messages = [];\n  let userList = [];\n\n  // $: connectionStatus = !!socket ? 'Connected!' : 'Not Connected!';\n  // $: connectionStyle = `color: ${!!socket ? 'green' : 'red'}`;\n\n  function connect(name) {\n    console.warn('IN CONNECT WITH NAME' + name);\n    socket = io();\n    socket.emit(Events.InitializeUser, { name });\n\n    socket.on(Events.ServerMessage, onServerMessage);\n    socket.on(Events.UserMessage, onUserMessage);\n    socket.on(Events.UserList, onUserList);\n  }\n\n  function onUserMessage(message) {\n    console.warn('-- new user message --');\n    console.log(message);\n    if (message.id) {\n      // get the name associated with the id of the user\n      const user = userList.find((user) => user.id === message.id);\n      // get fresh messages array\n      const newMessages = Array.from(messages);\n      // add the user to the message object\n      message.user = user;\n      // add new message to array;\n      newMessages.push(message);\n      // update messages object to refresh svelte component\n      messages = newMessages;\n    }\n  }\n\n  function onServerMessage(message) {\n    console.warn('-- new server message --');\n    console.log(message);\n\n    // get fresh messages array\n    const newMessages = Array.from(messages);\n    // add new message to array;\n    newMessages.push(message);\n    // update messages object to refresh svelte component\n    messages = newMessages;\n  }\n\n  function onUserList(newList) {\n    console.warn('-- new userList --');\n    console.log(newList);\n    userList = newList;\n  }\n\n  function sendMessage(message) {\n    const payload = { message };\n    console.log('sending payload');\n    console.log(payload);\n    socket.emit(Events.UserMessage, payload);\n  }\n</script>\n\n<main>\n  {#if !socket}\n    <Login {connect} />\n  {:else}\n    <div class=\"content\">\n      <UserList users={userList} />\n      <ChatBox {messages} {sendMessage} />\n    </div>\n  {/if}\n</main>\n\n<style>\n  main {\n    text-align: center;\n    padding: 1em;\n    max-width: 240px;\n    margin: 0 auto;\n  }\n\n  h1 {\n    text-transform: uppercase;\n    font-size: 4em;\n    font-weight: 100;\n  }\n\n  .content {\n    display: flex;\n  }\n\n  @media (min-width: 640px) {\n    main {\n      max-width: none;\n    }\n  }\n</style>\n",
    "<script>\r\n  import { onMount } from 'svelte';\r\n  export let messages;\r\n  export let sendMessage;\r\n  export let message;\r\n  let input;\r\n  let box;\r\n  let button;\r\n\r\n  onMount(() => {\r\n    input.focus();\r\n  });\r\n\r\n  function onMessage(e) {\r\n    // gotta do this to prevent the form from reloading the page\r\n    // DUMB\r\n    e.preventDefault();\r\n\r\n    // call the function from App.svelte to send the message\r\n    sendMessage(message);\r\n\r\n    // message is bound to the input box, reset it\r\n    message = '';\r\n\r\n    // scroll to the bottom of chat box\r\n    box.scrollIntoView(false);\r\n  }\r\n</script>\r\n\r\n<main>\r\n  <div class=\"message-box\" bind:this={box}>\r\n    <div class=\"spacer\" />\r\n    {#each messages as message (message.id + message.time + message.text)}\r\n      {#if message.user}\r\n        <p><span class=\"name\">{message.user.username}</span> - {message.text}</p>\r\n      {/if}\r\n      {#if message.id === 'server'}\r\n        <p class=\"server-message\">{message.text}</p>\r\n      {/if}\r\n    {/each}\r\n    <div class=\"text-container\">\r\n      <span>{'> '}</span>\r\n      <form on:submit={(e) => onMessage(e)}>\r\n        <input class=\"text-box\" type=\"text\" bind:this={input} bind:value={message} />\r\n      </form>\r\n    </div>\r\n  </div>\r\n</main>\r\n\r\n<style>\r\n  main {\r\n    text-align: left;\r\n  }\r\n\r\n  p {\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  form {\r\n    background-color: aqua;\r\n    height: 32px;\r\n  }\r\n\r\n  .spacer {\r\n    height: 0;\r\n    margin-top: auto;\r\n  }\r\n\r\n  .message-box {\r\n    display: flex;\r\n    flex: 1;\r\n    min-width: 500px;\r\n    height: 320px;\r\n    text-align: left;\r\n    background-color: var(--default-terminal-bg);\r\n    padding: 1em;\r\n    overflow-y: scroll;\r\n    flex-direction: column;\r\n    -ms-overflow-style: none; /* IE and Edge */\r\n    scrollbar-width: none; /* Firefox */\r\n  }\r\n\r\n  .name {\r\n    font-weight: bold;\r\n  }\r\n\r\n  .text-box {\r\n    background-color: var(--default-terminal-bg);\r\n    color: var(--default-fg-normal);\r\n    flex: 1;\r\n    border-radius: 0px;\r\n    border: 0px;\r\n    outline: none;\r\n  }\r\n\r\n  .text-container {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  .message-box::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n\r\n  .server-message {\r\n    font-weight: bold;\r\n    color: var(--default-fg-system);\r\n  }\r\n\r\n  @media (min-width: 640px) {\r\n    main {\r\n      max-width: none;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script>\r\n  let name = '';\r\n  export let connect;\r\n\r\n  function onSubmit(e) {\r\n    console.warn('SUBMITTINGSDFSDF');\r\n    e.preventDefault();\r\n    connect(name);\r\n  }\r\n</script>\r\n\r\n<main>\r\n  <h1>Name?</h1>\r\n  <form on:submit={onSubmit}><input type=\"text\" bind:value={name} /></form>\r\n</main>\r\n\r\n<style>\r\n  main {\r\n    text-align: center;\r\n    padding: 1em;\r\n    max-width: 240px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  h1 {\r\n    text-transform: uppercase;\r\n    font-size: 4em;\r\n    font-weight: 100;\r\n  }\r\n\r\n  @media (min-width: 640px) {\r\n    main {\r\n      max-width: none;\r\n    }\r\n  }\r\n</style>\r\n",
    "<script>\r\n  export let users;\r\n</script>\r\n\r\n<main>\r\n  <h4>connected users</h4>\r\n  {#each users as user (user.id)}\r\n    <div>\r\n      <p>{user.username}</p>\r\n    </div>\r\n  {/each}\r\n</main>\r\n\r\n<style>\r\n  main {\r\n    width: 10em;\r\n  }\r\n\r\n  p {\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n  }\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "AA+EE,IAAI,eAAC,CAAC,AACJ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AAQD,QAAQ,eAAC,CAAC,AACR,OAAO,CAAE,IAAI,AACf,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,IAAI,eAAC,CAAC,AACJ,SAAS,CAAE,IAAI,AACjB,CAAC,AACH,CAAC;AClDD,IAAI,eAAC,CAAC,AACJ,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,CAAC,eAAC,CAAC,AACD,UAAU,CAAE,CAAC,CACb,aAAa,CAAE,CAAC,AAClB,CAAC,AAED,IAAI,eAAC,CAAC,AACJ,gBAAgB,CAAE,IAAI,CACtB,MAAM,CAAE,IAAI,AACd,CAAC,AAED,OAAO,eAAC,CAAC,AACP,MAAM,CAAE,CAAC,CACT,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,YAAY,eAAC,CAAC,AACZ,OAAO,CAAE,IAAI,CACb,IAAI,CAAE,CAAC,CACP,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,KAAK,CACb,UAAU,CAAE,IAAI,CAChB,gBAAgB,CAAE,IAAI,qBAAqB,CAAC,CAC5C,OAAO,CAAE,GAAG,CACZ,UAAU,CAAE,MAAM,CAClB,cAAc,CAAE,MAAM,CACtB,kBAAkB,CAAE,IAAI,CACxB,eAAe,CAAE,IAAI,AACvB,CAAC,AAED,KAAK,eAAC,CAAC,AACL,WAAW,CAAE,IAAI,AACnB,CAAC,AAED,SAAS,eAAC,CAAC,AACT,gBAAgB,CAAE,IAAI,qBAAqB,CAAC,CAC5C,KAAK,CAAE,IAAI,mBAAmB,CAAC,CAC/B,IAAI,CAAE,CAAC,CACP,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,IAAI,AACf,CAAC,AAED,eAAe,eAAC,CAAC,AACf,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,2BAAY,mBAAmB,AAAC,CAAC,AAC/B,OAAO,CAAE,IAAI,AACf,CAAC,AAED,eAAe,eAAC,CAAC,AACf,WAAW,CAAE,IAAI,CACjB,KAAK,CAAE,IAAI,mBAAmB,CAAC,AACjC,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,IAAI,eAAC,CAAC,AACJ,SAAS,CAAE,IAAI,AACjB,CAAC,AACH,CAAC;ACjGD,IAAI,cAAC,CAAC,AACJ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AAED,EAAE,cAAC,CAAC,AACF,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,IAAI,cAAC,CAAC,AACJ,SAAS,CAAE,IAAI,AACjB,CAAC,AACH,CAAC;ACpBD,IAAI,cAAC,CAAC,AACJ,KAAK,CAAE,IAAI,AACb,CAAC,AAED,CAAC,cAAC,CAAC,AACD,UAAU,CAAE,CAAC,CACb,aAAa,CAAE,CAAC,AAClB,CAAC"
}